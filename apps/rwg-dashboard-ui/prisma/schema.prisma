generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("SUPABASE_DB_SUPABASE_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("SUPABASE_DB_POSTGRES_URL_NON_POOLING")
}

model CasinoLink {
  id              Int      @id @default(autoincrement())
  userId          String   @unique 
  realbetUserId   String
  realbetUsername String
  createdAt       DateTime @default(now())
}

model RewardsAccount {
  id                  Int      @id @default(autoincrement())
  userId              String   @unique
  waveMemberships     WaveMembership[]
}

enum RewardType {
  TokenBonus
  RealBetCredit
  None
}

model RewardWave {
  id                Int      @id @default(autoincrement())
  label             String
  description       String
  startTime         DateTime
  endTime           DateTime
  availableSeats    Int
  ticketsPerMember  Int
  live              Boolean  @default(true)
  totalRewards      Int
  rewards           Reward[]
  rewardPresets     RewardPresets[]
  memberships       WaveMembership[]
}

model WaveMembership {
  id                      Int      @id @default(autoincrement())
  seatNumber              Int
  accountId               Int
  account                 RewardsAccount @relation(fields: [accountId], references: [id])
  waveId                  Int
  wave                    RewardWave @relation(fields: [waveId], references: [id])
  reedeemableTickets      Int      @default(0)
  createdAt               DateTime @default(now())
}

model RewardPresets {
  id              Int    @id @default(autoincrement())
  prize           Decimal
  remaining       Int
  type            RewardType
  waveId          Int
  wave            RewardWave @relation(fields: [waveId], references: [id])
}

model Reward {
  id              Int      @id @default(autoincrement())
  userId          String
  type            RewardType
  amount          Decimal?
  redeemed        Boolean  @default(false)
  waveId          Int
  wave            RewardWave @relation(fields: [waveId], references: [id])
  createdAt       DateTime @default(now())
}
